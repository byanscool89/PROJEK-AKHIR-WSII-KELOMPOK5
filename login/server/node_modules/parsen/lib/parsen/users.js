// Generated by CoffeeScript 1.4.0
var createUser, deleteUser, getUser, loginUser, parsen, queryUsers, request, updateUser, utils,
  _this = this;

request = require('request');

parsen = require('../parsen');

utils = require('../utils/utils');

createUser = function(username, password, data, callback) {
  if (data == null) {
    data = {};
  }
  parsen.checkForKeys();
  data.username = username;
  data.password = password;
  return request({
    method: 'POST',
    uri: "https://api.parse.com/1/users",
    headers: {
      "X-Parse-Application-Id": parsen.parseApplicationId,
      "X-Parse-REST-API-Key": parsen.parseRESTAPIKey,
      "Content-Type": "application/json"
    },
    body: JSON.stringify(data)
  }, function(error, response, body) {
    return callback(error, response, body);
  });
};

loginUser = function(username, password, callback) {
  var params;
  parsen.checkForKeys();
  params = {
    "username": username,
    "password": password
  };
  return request({
    method: 'GET',
    uri: "https://api.parse.com/1/login?" + (utils.serialize(params)),
    headers: {
      "X-Parse-Application-Id": parsen.parseApplicationId,
      "X-Parse-REST-API-Key": parsen.parseRESTAPIKey,
      "Content-Type": "application/json"
    }
  }, function(error, response, body) {
    return callback(error, response, body);
  });
};

getUser = function(userId, callback) {
  parsen.checkForKeys();
  return request({
    method: 'GET',
    uri: "https://api.parse.com/1/users/" + userId,
    headers: {
      "X-Parse-Application-Id": parsen.parseApplicationId,
      "X-Parse-REST-API-Key": parsen.parseRESTAPIKey,
      "Content-Type": "application/json"
    }
  }, function(error, response, body) {
    return callback(error, response, body);
  });
};

updateUser = function(userId, sessionToken, data, callback) {
  parsen.checkForKeys();
  return request({
    method: 'PUT',
    uri: "https://api.parse.com/1/users/" + userId,
    headers: {
      "X-Parse-Application-Id": parsen.parseApplicationId,
      "X-Parse-REST-API-Key": parsen.parseRESTAPIKey,
      "X-Parse-Session-Token": sessionToken,
      "Content-Type": "application/json"
    },
    body: JSON.stringify(data)
  }, function(error, response, body) {
    return callback(error, response, body);
  });
};

deleteUser = function(userId, sessionToken, callback) {
  parsen.checkForKeys();
  return request({
    method: 'DELETE',
    uri: "https://api.parse.com/1/users/" + userId,
    headers: {
      "X-Parse-Application-Id": parsen.parseApplicationId,
      "X-Parse-REST-API-Key": parsen.arseRESTAPIKey,
      "X-Parse-Session-Token": sessionToken,
      "Content-Type": "application/json"
    }
  }, function(error, response, body) {
    return callback(error, response, body);
  });
};

queryUsers = function(params, callback) {
  parsen.checkForKeys();
  return request({
    method: 'GET',
    uri: "https://api.parse.com/1/users?" + (utils.serialize(params)),
    headers: {
      "X-Parse-Application-Id": parsen.parseApplicationId,
      "X-Parse-REST-API-Key": parsen.parseRESTAPIKey,
      "Content-Type": "application/json"
    }
  }, function(error, response, body) {
    return callback(error, response, body);
  });
};

module.exports.createUser = createUser;

module.exports.loginUser = loginUser;

module.exports.getUser = getUser;

module.exports.updateUser = updateUser;

module.exports.deleteUser = deleteUser;

module.exports.queryUsers = queryUsers;
